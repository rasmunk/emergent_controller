<!DOCTYPE aesl-source>
<network>


<!--list of global events-->
<event size="0" name="Start"/>
<event size="0" name="Stop"/>
<event size="0" name="Move"/>
<event size="2" name="SetSpeed"/>
<event size="2" name="SeeNothing"/>
<event size="7" name="ObstacleDetected"/>
<event size="0" name="KeepAlive"/>


<!--list of constants-->


<!--show keywords state-->
<keywords flag="true"/>


<!--node thymio-II-->
<node nodeId="1" name="thymio-II">## Variable used to indicate how long the robot should keep running before an event is triggered
var keepalive_timer
var normal_speed
var args
var prox_distance = 2000

onevent prox
	if ((prox.horizontal[3] >= prox_distance) or (prox.horizontal[2] >= prox_distance) or (prox.horizontal[1] >= prox_distance)) then
		emit ObstacleDetected prox.horizontal
	end
	
	## See nothing
    if (prox.horizontal[6] &lt;= prox_distance and prox.horizontal[5] &lt;= prox_distance and prox.horizontal[4] &lt;= prox_distance
    and prox.horizontal[3] &lt;= prox_distance and prox.horizontal[2] &lt;= prox_distance and prox.horizontal[1] &lt;= prox_distance 
    	and prox.horizontal[0] &lt;= prox_distance) then
    		emit SeeNothing [motor.left.target, motor.right.target]
    end
	

## When the timer has run out, stop the robot
onevent timer0
	emit Stop

## When stop is called it sets the keepalive timer to 0 and stops the robot motors
onevent Stop
    keepalive_timer = 0
    	motor.left.target = 0
    	motor.right.target = 0
    	call leds.circle(0,0,0,0,0,0,0,0)

onevent Start
	emit KeepAlive
	
onevent SetSpeed
	normal_speed = args[0]
	
onevent Move
	motor.left.target = normal_speed
	motor.right.target = normal_speed
	
## When KeepAlive is triggered it resets the timer that validates whether the robot should keep on moving
onevent KeepAlive
    timer.period[0] = keepalive_timer

## Sub Methods ##
## Clear all lights
sub clear_lights
    call leds.bottom.left(0,0,0)
	call leds.bottom.right(0,0,0)
    call leds.buttons(0,0,0,0)
    call leds.circle(0,0,0,0,0,0,0,0)
    call leds.prox.h(0,0,0,0,0,0,0,0)
    call leds.prox.v(0,0)
    call leds.rc(0)
    call leds.sound(0)
    call leds.temperature(0,0)
    call leds.top(0,0,0)</node>


</network>
